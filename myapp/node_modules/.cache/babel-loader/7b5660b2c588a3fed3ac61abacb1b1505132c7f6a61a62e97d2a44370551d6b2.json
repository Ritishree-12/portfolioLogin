{"ast":null,"code":"var _jsxFileName = \"E:\\\\avalability\\\\myapp\\\\src\\\\components\\\\EmailVerify.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerifyEmail() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [verificationStatus, setVerificationStatus] = useState('Verifying...');\n  useEffect(() => {\n    // Make an API request to verify the email using the token\n    const verifyEmail = async () => {\n      try {\n        const response = await fetch(`/api/verify-email/${token}`);\n        if (response.ok) {\n          setVerificationStatus('Email verified successfully.');\n        } else {\n          setVerificationStatus('Email verification failed.');\n        }\n      } catch (error) {\n        setVerificationStatus('An error occurred.');\n      }\n    };\n    verifyEmail();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: verificationStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(VerifyEmail, \"KMmUEeuzIqSEBCaH18IoeD5fA00=\", false, function () {\n  return [useParams];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","VerifyEmail","_s","token","verificationStatus","setVerificationStatus","verifyEmail","response","fetch","ok","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/avalability/myapp/src/components/EmailVerify.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction VerifyEmail() {\r\n  const { token } = useParams();\r\n  const [verificationStatus, setVerificationStatus] = useState('Verifying...');\r\n\r\n  useEffect(() => {\r\n    // Make an API request to verify the email using the token\r\n    const verifyEmail = async () => {\r\n      try {\r\n        const response = await fetch(`/api/verify-email/${token}`);\r\n        if (response.ok) {\r\n          setVerificationStatus('Email verified successfully.');\r\n        } else {\r\n          setVerificationStatus('Email verification failed.');\r\n        }\r\n      } catch (error) {\r\n        setVerificationStatus('An error occurred.');\r\n      }\r\n    };\r\n\r\n    verifyEmail();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Email Verification</h2>\r\n      <p>{verificationStatus}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerifyEmail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACM,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,cAAc,CAAC;EAE5ED,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qBAAoBL,KAAM,EAAC,CAAC;QAC1D,IAAII,QAAQ,CAACE,EAAE,EAAE;UACfJ,qBAAqB,CAAC,8BAA8B,CAAC;QACvD,CAAC,MAAM;UACLA,qBAAqB,CAAC,4BAA4B,CAAC;QACrD;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdL,qBAAqB,CAAC,oBAAoB,CAAC;MAC7C;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bf,OAAA;MAAAW,QAAA,EAAIP;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAACb,EAAA,CA5BQD,WAAW;EAAA,QACAH,SAAS;AAAA;AAAAkB,EAAA,GADpBf,WAAW;AA8BpB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}